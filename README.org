* J's toolbox

** Motivation

When conducting statistical analyses with the final outcome being a report/paper/document, there are three primary outputs: tables, figures and numbers. In practice, the generation of these outcomes is a highly iterative process, and each output is subject to change. Typical examples of such changes are changes in the input data, variable additions, changes in processing of the data or changes in estimation. The task of these helper functions is to provide glue to minimize the friction between writing analytical code and including its output in a document. Essentially this aims to be a tex-like reference manager, but for numbers (and tables/plots). 

The main inspiration was the writing of a report with a dozen figures figures and tables and around one hundred numbers. Several times our input data changed, which required a hour-long exhausting check of every number in dozens of pages.

main features:
- single point of truth for output: numbers, plot dimension, table layouts are defined in R code
- inspection: functionality to see how an element will look in the final latex report
- avoid typos: no more manual copying of numbers from the terminal into the text




tools included: 



** custom plotting framework

[[file:custom-plotting-framework.png]]

main idea: plots are defined as output of functions (gp_X) which take data and additional configuration (specified in a function called ~gc_plots~). This allows to interact with a small number of functions, which only need the name of the plot to process it: 
- ~gplt~: generate a plot and store it in a global ~l_plots~ list
- ~dplt~: retrieve a plot from ~l_plots~ and display it
- ~wplt~: write a plot to file (both pdf and png)



some helper functions for common tasks:
- ~gdplt~: generate plot and display in R
- ~dpltF~: display plot written to pdf file (with zathura)
- ~dpltR~: display plot in R 
- ~gwdplt~: generate, write, display plot as pdf
- ~wdplt~: write and display plot 



** custom table framwork
similar idea as plotting framework, uses ~xtable~: 

- ~gt_X~: takes in data, generates table list of
  - ~dt_fmd~: data.table with cells
  - ~hline_after~: positioning of hlines (some hlines are also provided by ~add_to_row~)
  - ~add_to_row~: rows added afterwards: list of pos and command of ~add_to_row~ strings
    used for column names (top), significance notes (bottom), variable group strings (inbetween)
  - ~align_cfg~: latex-table columm specification, can include dcolumn types
  - ~number_cols~: for wcpT, these the values in columns get wrapped in dollar sign to ensure math mode, which is somehow required for tables to work when exporting to word
  - optional: ~landscape~, default value F. whether to flip the page horizontal, to be used for wide tables
    
- ~gtbl~: generates table-object list, places it in l_tbls
- ~wtbl~: parses l_tbls object to xtable, then writes to tex file and cropped pdf file
- ~dtbl~: displays cropped pdf file


** callgraph WIP

** word export WIP

** number tracking WIP

** other functionality WIP
- number formatting
- view_xl
- iso3c recoding
- regression tables
- xtsum
- sqlite prep


** limitations
Several warnings are in order:
- These functions are highly idiosyncratically based on my experience, and in particular the software I use. Some components may have wider applicability, but others, in particular anything related to Emacs/ESS, are so tailored to my workflow that you may find them not helpful.
- While these functions facilitate updating of numbers, figures and tables, their substantive meaning may change. Validation of these numbers, via manual inspection or automated testing, always has to be kept in mind. 
